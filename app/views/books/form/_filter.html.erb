<%= render Views::Books::Form::Section.new(id: "detailsFilter", data: { 'details-set-target': "child", controller: "filter-by" }) do |section| %>
  <%= section.title icon: "filter", colored: f.object.condition_attributes.any?, classes: "bg-green-300 hover:border-green-500" do %>
    <%= f.object.condition_attributes.any? ? "Filtered by #{f.object.condition_attributes.map {|a| Book.human_attribute_name(a)}.join(', ')}" : "Filter" %>
  <% end %>

  <%= section.body do %>
    <template data-filter-by-target="template">
      <%= f.grouping_fields f.object.new_grouping, object_name: "new_object_name", child_index: "new_grouping" do |f|
        render("filter/grouping_fields", f: f)
      end %>
    </template>

    <fieldset class="bg-white rounded space-y-2 text-sm">
      <legend class="border-b w-full font-bold p-2 whitespace-nowrap">
        In this view, show records where
        <%= f.combinator_select({}, class: "rounded py-1") %>
        of the following are true&hellip;
      </legend>
      <div class="p-2 space-y-2">
        <% condition_object = f.object.conditions.any? ? f.object.conditions : f.object.build_condition %>
        <%= f.condition_fields(condition_object) do |c| %>
          <%= render 'filter/condition_fields', f: c %>
        <% end %>
        <%= button_to_add_fields(f, :condition) %>
      
        <%= f.grouping_fields do |g| %>
          <%= render 'filter/grouping_fields', f: g %>
        <% end %>
        <%= button_to_add_fields(f, :grouping) %>
      </div>
    </fieldset>

    <div class="flex items-center justify-end gap-2 py-2 px-4 bg-gray-200">
      <%= render(Views::Button.new) { "Cancel" } %>

      <%= f.submit "Filter", name: "filter", class: "cursor-pointer inline-flex items-center rounded-md border border-transparent bg-blue-500 px-2.5 py-1.5 text-base font-medium text-white shadow-sm hover:bg-blue-400" %>
    </div>
  <% end %>
<% end %>
